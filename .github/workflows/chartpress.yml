name: Chartpress Publish
on: push
env:
  STAGING_REGISTRY_NAME: lulcstagingacr
  STAGING_CLUSTER_NAME: lulcStagingAks2
  STAGING_MOSAIC_BACKEND: sqlite:///
  STAGING_MOSAIC_HOST: /tmp/data/mosaics.db
  CLUSTER_RESOURCE_GROUP: lulcStaging
  NAMESPACE: default
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.STAGING_REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.STAGING_REGISTRY_USERNAME }}
        password: ${{ secrets.STAGING_REGISTRY_PASSWORD }}
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Setup git
      run: git config --global user.email "noreply@developmentseed.org" && git config --global user.name "Github Action"
    - name: Install Chartpress
      run: |
        pip install -v chartpress
    - name: Run Chartpress
      run: chartpress --push # should eventually --publish-chart
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
    - name: Staging - substitute secrets
      uses: bluwy/substitute-string-action@v1
      with:
        _input-file: './lulc-helm/values.dev.template.yaml'
        _format-key: '{{key}}'
        _output-file: './lulc-helm/values.dev.yaml'
        STAGING_SIGNING_SECRET: ${{ secrets.STAGING_SIGNING_SECRET }}
        STAGING_POSTGRES: ${{ secrets.STAGING_POSTGRES }}
        STAGING_MOSAIC_BACKEND: ${{ env.STAGING_MOSAIC_BACKEND }}
        STAGING_MOSAIC_HOST: ${{ env.STAGING_MOSAIC_HOST }}
    - name: Set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.STAGING_CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Create image pull secret for ACR
      uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.STAGING_REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.STAGING_REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.STAGING_REGISTRY_PASSWORD }}
        secret-name: ${{ env.STAGING_REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: './lulc-helm/'
        releaseName: lulc-test
        overrideFiles: './lulc-helm/values.dev.yaml'
        helm-version: 'latest'
      id: bake

    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        imagepullsecrets: |
          ${{ env.STAGING_REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
