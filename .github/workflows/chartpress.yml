name: Chartpress Publish
on: push
env:
  STAGING_REGISTRY_NAME: sajjadhelmacr
  STAGING_CLUSTER_NAME: sajjadAksCluster
  CLUSTER_RESOURCE_GROUP: sajjadAksTest
  NAMESPACE: default
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: 'sajjadhelmacr.azurecr.io'
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Setup git
      run: git config --global user.email "noreply@developmentseed.org" && git config --global user.name "Github Action"
    - name: Install Chartpress
      run: |
        pip install -v chartpress
    - name: Run Chartpress
      run: chartpress --push # should eventually --publish-chart
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
    - name: Set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.STAGING_CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Create image pull secret for ACR
      uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.STAGING_REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.STAGING_REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.STAGING_REGISTRY_PASSWORD }}
        secret-name: ${{ env.STAGING_REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    - uses: actions/checkout@v1
    # - name: Helm deploy
    #   run: helm upgrade lulc-test --wait lulc-helm
    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: './lulc-helm/'
        overrideFiles: './lulc-helm/values.yaml'
        releaseName: lulc-test
        helm-version: 'latest'
      id: bake

    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
          ${{ env.STAGING_REGISTRY_NAME }}.azurecr.io/lulc-api:${{ github.sha }}
          ${{ env.STAGING_REGISTRY_NAME }}.azurecr.io/lulc-gpu:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.STAGING_REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}