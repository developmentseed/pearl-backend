name: Chartpress Publish
on: push
env:
  # STAGING_REGISTRY_NAME: lulcstagingacr
  STAGING_REGISTRY_NAME: lulcterraformacr
  STAGING_CLUSTER_NAME: lulcStagingAks3
  STAGING_MOSAIC_BACKEND: sqlite:///
  STAGING_MOSAIC_HOST: /tmp/data/mosaics.db
  STAGING_APPGW_NAME: lulcStagingApplicationGateway3
  # CLUSTER_RESOURCE_GROUP: lulcStaging
  CLUSTER_RESOURCE_GROUP: lulcterraformdev
  PRODUCTION_CLUSTER_RESOURCE_GROUP: lulcProduction
  PRODUCTION_CLUSTER_NAME: lulcProductionAks
  NAMESPACE: default
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      TF_VAR_username: github
      signingSecret: ${{ secrets.TERRAFORM_SIGNING_SECRET }}
      subscriptionId: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
      tenantId: ${{ secrets.TERRAFORM_TENANT_ID }}
      servicePrincipalId: ${{ secrets.TERRAFORM_SERVICE_PRINCIPAL_ID }}
      servicePrincipalKey: ${{ secrets.TERRAFORM_SERVICE_PRINCIPAL_KEY }}
      storageAccessKey: ${{ secrets.TERRAFORM_STORAGE_KEY }}
    steps:
    - uses: actions/checkout@v1
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.STAGING_REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.TERRAFORM_REGISTRY_USERNAME }}
        password: ${{ secrets.TERRAFORM_REGISTRY_PASSWORD }}
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Setup git
      run: git config --global user.email "noreply@developmentseed.org" && git config --global user.name "Github Action"
    - name: Create more disk space
      run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: Install Chartpress
      run: |
        pip install -v chartpress
    - name: Add ~/home/.local/bin to Github Path
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Build & Publish
      run: ./scripts/cipublish

    - name: Deploy -- Dev
      env:
        postgresPassword: ${{ secrets.TERRAFORM_STAGING_POSTGRES_PASSWORD }}
        auth0BaseUrl: ${{ secrets.STAGING_AUTH0_ISSUER_BASE_URL }}
      if: startsWith(github.event.head_commit.message, '[deploy]')
      run: ./scripts/cideploy --dev

    - name: Deploy -- Staging
      env:
        postgresPassword: ${{ secrets.TERRAFORM_STAGING_POSTGRES_PASSWORD }}
      if: github.ref == 'refs/heads/develop'
      run: ./scripts/cideploy --staging

    - name: Deploy -- Production
      env:
        postgresPassword: ${{ secrets.TERRAFORM_STAGING_POSTGRES_PASSWORD }}
        auth0BaseUrl: ${{ secrets.PRODUCTION_AUTH0_ISSUER_BASE_URL }}
      if: github.ref == 'refs/heads/main'
      run: ./scripts/cideploy --production