environment: dev
domain: lulc.ds.io
adminEmail: sanjay@developmentseed.org
api:
  enabled: true
  replicaCount: 2
  containerPort: 2000
  image:
    name: 'chartpress_replace'
    tag: 'chartpress_replace'
  resources:
    requests:
      cpu: 1
      memory: 4Gi
    limits:
      cpu: 4
      memory: 12Gi
socket:
  enabled: true
  containerPort: 1999
  image:
    name: 'chartpress_replace'
    tag: 'chartpress_replace'
  resources:
    requests:
      cpu: 1200m
      memory: 4Gi
    limits:
      cpu: 4
      memory: 8Gi
tiles:
  enabled: true
  containerPort: 8000
  image:
    name: 'chartpress_replace'
    tag: 'chartpress_replace'
  nodeSelector:
    enabled: true
    label_key: agentpool
    label_value: tiler
  resources:
    requests:
      cpu: 400m
      memory: 1Gi
    limits:
      cpu: 800m
      memory: 2Gi

tilesScaler:
  env:
    backendPool: replace-with-service-backend-pool-identifier
    tenantId: replace-with-tenant-id
    subscriptionId: replace-with-subscription-id
    resourceGroupName: replace-with-cluster-resource-group
    activeDirectoryClientId: replace-with-client-id
    activeDirectoryClientPassword: replace-with-client-secret

redis:
  enabled: true
  resources:
    requests:
      cpu: 1200m
      memory: 4Gi
    limits:
      cpu: 4
      memory: 8Gi

gpu:
  image:
    name: 'chartpress_replace'
    tag: 'chartpress_replace'

placeholder:
  enabled: true
  replicaCount: 1
  nodeSelectorName: gpunodepool

  # If isGpu is true, requests is for numGPUs
  # If false, uses the resource values from below.
  isGpu: true
  numGPUs: 2

  resources:
    requests:
      cpu: 3
      memory: 12Gi
    limits:
      cpu: 3
      memory: 12Gi

nginx:
  enabled: false
  image:
    name: 'chartpress_replace'
    tag: 'chartpress_replace'
  env:
    FRONTEND_DOMAIN: ''
kubejanitor:
  image:
    repository: hjacobs/kube-janitor
    tag: 20.10.0
    pullPolicy: IfNotPresent
  cron:
    schedule: "0 */2 * * *" # run every 2 hours
    failedJobsHistoryLimit: 3
    # # for the cases of cron controller interuption
    # # https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
    # startingDeadlineSeconds: 300
  restartPolicy: OnFailure
  resources:
    enabled: false
    limits:
      memory: 100Mi
    requests:
      cpu: 5m
      memory: 100Mi
  dryRun: false
  debug: false
  once: true
  # example rules configuration to set TTL for arbitrary objects
  # see https://github.com/hjacobs/kube-janitor for details
  rules: []
    # - id: require-application-label
    #   # remove deployments and statefulsets without a label "application"
    #   resources:
    #     # resources are prefixed with "XXX" to make sure they are not active by accident
    #     # modify the rule as needed and remove the "XXX" prefix to activate
    #     - XXXdeployments
    #     - XXXstatefulsets
    #   # see http://jmespath.org/specification.html
    #   jmespath: "!(spec.template.metadata.labels.application)"
    #   ttl: 4d
    # - id: temporary-pr-namespaces
    #   # delete all namespaces with a name starting with "pr-*"
    #   resources:
    #     # resources are prefixed with "XXX" to make sure they are not active by accident
    #     # modify the rule as needed and remove the "XXX" prefix to activate
    #     - XXXnamespaces
    #   # this uses JMESPath's built-in "starts_with" function
    #   # see http://jmespath.org/specification.html#starts-with
    #   jmespath: "starts_with(metadata.name, 'pr-')"
    #   ttl: 4h

